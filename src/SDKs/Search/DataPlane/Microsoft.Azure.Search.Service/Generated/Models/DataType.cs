// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for DataType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DataType
    {
        [EnumMember(Value = "Edm.String")]
        EdmString,
        [EnumMember(Value = "Edm.Int32")]
        EdmInt32,
        [EnumMember(Value = "Edm.Int64")]
        EdmInt64,
        [EnumMember(Value = "Edm.Double")]
        EdmDouble,
        [EnumMember(Value = "Edm.Boolean")]
        EdmBoolean,
        [EnumMember(Value = "Edm.DateTimeOffset")]
        EdmDateTimeOffset,
        [EnumMember(Value = "Edm.GeographyPoint")]
        EdmGeographyPoint
    }
    internal static class DataTypeEnumExtension
    {
        internal static string ToSerializedValue(this DataType? value)
        {
            return value == null ? null : ((DataType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this DataType value)
        {
            switch( value )
            {
                case DataType.EdmString:
                    return "Edm.String";
                case DataType.EdmInt32:
                    return "Edm.Int32";
                case DataType.EdmInt64:
                    return "Edm.Int64";
                case DataType.EdmDouble:
                    return "Edm.Double";
                case DataType.EdmBoolean:
                    return "Edm.Boolean";
                case DataType.EdmDateTimeOffset:
                    return "Edm.DateTimeOffset";
                case DataType.EdmGeographyPoint:
                    return "Edm.GeographyPoint";
            }
            return null;
        }

        internal static DataType? ParseDataType(this string value)
        {
            switch( value )
            {
                case "Edm.String":
                    return DataType.EdmString;
                case "Edm.Int32":
                    return DataType.EdmInt32;
                case "Edm.Int64":
                    return DataType.EdmInt64;
                case "Edm.Double":
                    return DataType.EdmDouble;
                case "Edm.Boolean":
                    return DataType.EdmBoolean;
                case "Edm.DateTimeOffset":
                    return DataType.EdmDateTimeOffset;
                case "Edm.GeographyPoint":
                    return DataType.EdmGeographyPoint;
            }
            return null;
        }
    }
}
