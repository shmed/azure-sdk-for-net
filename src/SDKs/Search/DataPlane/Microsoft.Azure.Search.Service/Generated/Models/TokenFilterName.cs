// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for TokenFilterName.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TokenFilterName
    {
        [EnumMember(Value = "arabic_normalization")]
        ArabicNormalization,
        [EnumMember(Value = "apostrophe")]
        Apostrophe,
        [EnumMember(Value = "asciifolding")]
        Asciifolding,
        [EnumMember(Value = "cjk_bigram")]
        CjkBigram,
        [EnumMember(Value = "cjk_width")]
        CjkWidth,
        [EnumMember(Value = "classic")]
        Classic,
        [EnumMember(Value = "common_grams")]
        CommonGrams,
        [EnumMember(Value = "edgeNGram_v2")]
        EdgeNGramV2,
        [EnumMember(Value = "elision")]
        Elision,
        [EnumMember(Value = "german_normalization")]
        GermanNormalization,
        [EnumMember(Value = "hindi_normalization")]
        HindiNormalization,
        [EnumMember(Value = "indic_normalization")]
        IndicNormalization,
        [EnumMember(Value = "keyword_repeat")]
        KeywordRepeat,
        [EnumMember(Value = "kstem")]
        Kstem,
        [EnumMember(Value = "length")]
        Length,
        [EnumMember(Value = "limit")]
        Limit,
        [EnumMember(Value = "lowercase")]
        Lowercase,
        [EnumMember(Value = "nGram_v2")]
        NGramV2,
        [EnumMember(Value = "persian_normalization")]
        PersianNormalization,
        [EnumMember(Value = "phonetic")]
        Phonetic,
        [EnumMember(Value = "porter_stem")]
        PorterStem,
        [EnumMember(Value = "reverse")]
        Reverse,
        [EnumMember(Value = "scandinavian_normalization")]
        ScandinavianNormalization,
        [EnumMember(Value = "scandinavian_folding")]
        ScandinavianFolding,
        [EnumMember(Value = "shingle")]
        Shingle,
        [EnumMember(Value = "snowball")]
        Snowball,
        [EnumMember(Value = "sorani_normalization")]
        SoraniNormalization,
        [EnumMember(Value = "stemmer")]
        Stemmer,
        [EnumMember(Value = "stopwords")]
        Stopwords,
        [EnumMember(Value = "trim")]
        Trim,
        [EnumMember(Value = "truncate")]
        Truncate,
        [EnumMember(Value = "unique")]
        Unique,
        [EnumMember(Value = "uppercase")]
        Uppercase,
        [EnumMember(Value = "word_delimiter")]
        WordDelimiter
    }
    internal static class TokenFilterNameEnumExtension
    {
        internal static string ToSerializedValue(this TokenFilterName? value)
        {
            return value == null ? null : ((TokenFilterName)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this TokenFilterName value)
        {
            switch( value )
            {
                case TokenFilterName.ArabicNormalization:
                    return "arabic_normalization";
                case TokenFilterName.Apostrophe:
                    return "apostrophe";
                case TokenFilterName.Asciifolding:
                    return "asciifolding";
                case TokenFilterName.CjkBigram:
                    return "cjk_bigram";
                case TokenFilterName.CjkWidth:
                    return "cjk_width";
                case TokenFilterName.Classic:
                    return "classic";
                case TokenFilterName.CommonGrams:
                    return "common_grams";
                case TokenFilterName.EdgeNGramV2:
                    return "edgeNGram_v2";
                case TokenFilterName.Elision:
                    return "elision";
                case TokenFilterName.GermanNormalization:
                    return "german_normalization";
                case TokenFilterName.HindiNormalization:
                    return "hindi_normalization";
                case TokenFilterName.IndicNormalization:
                    return "indic_normalization";
                case TokenFilterName.KeywordRepeat:
                    return "keyword_repeat";
                case TokenFilterName.Kstem:
                    return "kstem";
                case TokenFilterName.Length:
                    return "length";
                case TokenFilterName.Limit:
                    return "limit";
                case TokenFilterName.Lowercase:
                    return "lowercase";
                case TokenFilterName.NGramV2:
                    return "nGram_v2";
                case TokenFilterName.PersianNormalization:
                    return "persian_normalization";
                case TokenFilterName.Phonetic:
                    return "phonetic";
                case TokenFilterName.PorterStem:
                    return "porter_stem";
                case TokenFilterName.Reverse:
                    return "reverse";
                case TokenFilterName.ScandinavianNormalization:
                    return "scandinavian_normalization";
                case TokenFilterName.ScandinavianFolding:
                    return "scandinavian_folding";
                case TokenFilterName.Shingle:
                    return "shingle";
                case TokenFilterName.Snowball:
                    return "snowball";
                case TokenFilterName.SoraniNormalization:
                    return "sorani_normalization";
                case TokenFilterName.Stemmer:
                    return "stemmer";
                case TokenFilterName.Stopwords:
                    return "stopwords";
                case TokenFilterName.Trim:
                    return "trim";
                case TokenFilterName.Truncate:
                    return "truncate";
                case TokenFilterName.Unique:
                    return "unique";
                case TokenFilterName.Uppercase:
                    return "uppercase";
                case TokenFilterName.WordDelimiter:
                    return "word_delimiter";
            }
            return null;
        }

        internal static TokenFilterName? ParseTokenFilterName(this string value)
        {
            switch( value )
            {
                case "arabic_normalization":
                    return TokenFilterName.ArabicNormalization;
                case "apostrophe":
                    return TokenFilterName.Apostrophe;
                case "asciifolding":
                    return TokenFilterName.Asciifolding;
                case "cjk_bigram":
                    return TokenFilterName.CjkBigram;
                case "cjk_width":
                    return TokenFilterName.CjkWidth;
                case "classic":
                    return TokenFilterName.Classic;
                case "common_grams":
                    return TokenFilterName.CommonGrams;
                case "edgeNGram_v2":
                    return TokenFilterName.EdgeNGramV2;
                case "elision":
                    return TokenFilterName.Elision;
                case "german_normalization":
                    return TokenFilterName.GermanNormalization;
                case "hindi_normalization":
                    return TokenFilterName.HindiNormalization;
                case "indic_normalization":
                    return TokenFilterName.IndicNormalization;
                case "keyword_repeat":
                    return TokenFilterName.KeywordRepeat;
                case "kstem":
                    return TokenFilterName.Kstem;
                case "length":
                    return TokenFilterName.Length;
                case "limit":
                    return TokenFilterName.Limit;
                case "lowercase":
                    return TokenFilterName.Lowercase;
                case "nGram_v2":
                    return TokenFilterName.NGramV2;
                case "persian_normalization":
                    return TokenFilterName.PersianNormalization;
                case "phonetic":
                    return TokenFilterName.Phonetic;
                case "porter_stem":
                    return TokenFilterName.PorterStem;
                case "reverse":
                    return TokenFilterName.Reverse;
                case "scandinavian_normalization":
                    return TokenFilterName.ScandinavianNormalization;
                case "scandinavian_folding":
                    return TokenFilterName.ScandinavianFolding;
                case "shingle":
                    return TokenFilterName.Shingle;
                case "snowball":
                    return TokenFilterName.Snowball;
                case "sorani_normalization":
                    return TokenFilterName.SoraniNormalization;
                case "stemmer":
                    return TokenFilterName.Stemmer;
                case "stopwords":
                    return TokenFilterName.Stopwords;
                case "trim":
                    return TokenFilterName.Trim;
                case "truncate":
                    return TokenFilterName.Truncate;
                case "unique":
                    return TokenFilterName.Unique;
                case "uppercase":
                    return TokenFilterName.Uppercase;
                case "word_delimiter":
                    return TokenFilterName.WordDelimiter;
            }
            return null;
        }
    }
}
